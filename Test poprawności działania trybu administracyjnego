import unittest
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

class TestTrybAdministracyjny(unittest.TestCase):

    def setUp(self):
        self.LOGIN = "Dominik"
        self.HASLO = "domino2024"
        self.driver = webdriver.Chrome(service=Service())
        self.driver.maximize_window()

    def test_tryb_admin_personalizacja(self):
        driver = self.driver
        driver.get("https://mmrmqpr585.publigo.onl/wp-login.php")

        # Logowanie
        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID, "user_login")))
        driver.find_element(By.ID, "user_login").send_keys(self.LOGIN)
        driver.find_element(By.ID, "user_pass").send_keys(self.HASLO)
        driver.find_element(By.ID, "wp-submit").click()

        # Przejście do strony personalizacji
        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID, "wpadminbar")))
        driver.get("https://mmrmqpr585.publigo.onl/wp-admin/customize.php?autofocus[section]=bpmj_eddcm_colors_settings")

        # Sprawdź, czy panel personalizacji jest widoczny
        try:
            WebDriverWait(driver, 15).until(EC.presence_of_element_located((By.CLASS_NAME, "customize-pane-parent")))
            print("✅ Tryb administracyjny (Personalizacja) jest aktywny i widoczny!")
        except:
            self.fail("❌ Tryb administracyjny NIE jest aktywny lub strona się nie załadowała.")

    def tearDown(self):
        time.sleep(5)
        self.driver.quit()

if __name__ == "__main__":
    unittest.main()
