# test_add_and_remove_item_with_sleep.py

import time
import pytest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

PRODUCT_URL = "http://www.selenium-shop.pl/produkt/koszulka-manchester-fc-city/"

@pytest.fixture
def driver():
    driver = webdriver.Chrome()
    driver.maximize_window()
    yield driver
    driver.quit()

def test_add_and_remove_item_with_sleep(driver):
    # 1. Otwórz stronę produktu i dodaj go do koszyka
    driver.get(PRODUCT_URL)
    add_btn = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.CSS_SELECTOR, "button.single_add_to_cart_button"))
    )
    add_btn.click()

    # 1a. Odczekaj 5 sekund (np. na animację/AJAX)
    time.sleep(5)

    # 2. Przejdź do koszyka przez komunikat
    view_cart = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.CSS_SELECTOR, ".woocommerce-message a"))
    )
    view_cart.click()

    # 3. Usuń produkt z koszyka
    remove_btn = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.CSS_SELECTOR, "a.remove"))
    )
    remove_btn.click()

    # 4. Poczekaj na komunikat o pustym koszyku i zweryfikuj jego treść
    empty_msg = WebDriverWait(driver, 10).until(
        EC.visibility_of_element_located((By.CSS_SELECTOR, ".cart-empty"))
    )
    assert "Twój koszyk jest pusty" in empty_msg.text, \
        f"Spodziewano się komunikatu o pustym koszyku, ale było: '{empty_msg.text}'"
