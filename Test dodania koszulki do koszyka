# test_add_specific_tshirt_to_cart.py
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.action_chains import ActionChains
from webdriver_manager.chrome import ChromeDriverManager


def test_add_leicester_tshirt_to_cart():
    # uruchom Chrome
    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))
    driver.implicitly_wait(3)                 # pas bezpieczeństwa
    wait = WebDriverWait(driver, 15)          # główny explicit wait

    # 1) Strona produktu
    driver.get(
        "http://www.selenium-shop.pl/produkt/koszulka-leicester-fc-city/"
    )

    # 2) Kliknij „Dodaj do koszyka”
    add_btn = wait.until(
        EC.element_to_be_clickable(
            (By.CSS_SELECTOR, "button.single_add_to_cart_button")
        )
    )
    add_btn.click()                           # zwykły .click() – żadnego JS

    # 3) Czekaj na komunikat WooCommerce z linkiem do koszyka
    cart_link = wait.until(
        EC.element_to_be_clickable(
            (By.CSS_SELECTOR, "div.woocommerce-message a.wc-forward")
        )
    )
    cart_link.click()                         # przejdź do koszyka

    # 4) Poczekaj na pierwszy wiersz koszyka
    wait.until(
        EC.presence_of_element_located((By.CSS_SELECTOR, "tr.cart_item"))
    )
    cart_items = driver.find_elements(By.CSS_SELECTOR, "tr.cart_item")
    assert cart_items, "Koszyk jest pusty – produkt nie został dodany"

    # 5) Zostań na stronie 3 s (bez time.sleep)
    ActionChains(driver).pause(3).perform()

    driver.quit()

