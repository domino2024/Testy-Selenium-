# test_admin_logout.py
import unittest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.action_chains import ActionChains

class TestWylogowania(unittest.TestCase):

    def setUp(self):
        self.LOGIN = "Dominik"
        self.HASLO = "domino2024"
        self.driver = webdriver.Chrome(service=Service())
        self.driver.maximize_window()

    def test_admin_moze_sie_wylogowac(self):
        driver = self.driver
        driver.get("https://mmrmqpr585.publigo.onl/wp-login.php")

        # 1) Logowanie
        wait = WebDriverWait(driver, 10)
        wait.until(EC.presence_of_element_located((By.ID, "user_login")))
        driver.find_element(By.ID, "user_login").send_keys(self.LOGIN)
        driver.find_element(By.ID, "user_pass").send_keys(self.HASLO)
        driver.find_element(By.ID, "wp-submit").click()

        # 2) Czekaj na pasek administracyjny
        wait.until(EC.presence_of_element_located((By.ID, "wpadminbar")))

        # 3) Rozwiń menu użytkownika przez najechanie na avatar
        avatar = driver.find_element(By.ID, "wp-admin-bar-my-account")
        ActionChains(driver).move_to_element(avatar).perform()

        # 4) Kliknij „Wyloguj się”
        logout = wait.until(EC.element_to_be_clickable((By.ID, "wp-admin-bar-logout")))
        logout.click()

        # 5) Sprawdź, że wróciliśmy do formularza logowania
        wait.until(EC.presence_of_element_located((By.ID, "loginform")))

    def tearDown(self):
        self.driver.quit()

if __name__ == "__main__":
    unittest.main()
